name: Certificate ZeroSSL
on: 
  push:
jobs:
  CreateCertificate:
    name: Test Certificate ZeroSSL
    runs-on: ubuntu-latest
    steps:
      - name: DownLoad action
        uses: actions/checkout@v3
        with:
          repository: TiagoSantos01/ZeroSSL
          path: ./.actions/
          ref: main
      - name: Check Certifcate exist
        id: check_certificate
        uses: ./.actions/CheckCertificate
        with:
          apikey-zerossl: '${{ secrets.APIKEY_ZEROSSL }}'
          ssl-certificate-status  : issued
          ssl-dns: '${{ secrets.DNS }}'
      - name: Valid CSR
        if: steps.check_certificate.outputs.id == ''
        id: csr
        uses: ./.actions/ValidCSR
        with:
          apikey-zerossl: '${{ secrets.APIKEY_ZEROSSL }}'
          ssl-csr: '${{ secrets.CSR }}'
      - name: Create Certicate
        if: steps.csr.outputs.valid == 'true'
        id: create_certificate
        uses: ./.actions/CreateCertificate
        with:
          apikey-zerossl: '${{ secrets.APIKEY_ZEROSSL }}'
          ssl-dns: '${{ secrets.DNS }}'    
          ssl-csr: '${{ secrets.CSR }}'   
          ssl-validaty-days: '90'
          ssl-strict-domains: '1'
  VerifyDns:
    needs: [CreateCertificate]
    name: Test Certificate ZeroSSL
    runs-on: ubuntu-latest
    steps:
      - name: DownLoad action
        uses: actions/checkout@v3
        with:
          repository: TiagoSantos01/ZeroSSL
          path: ./.actions/
          ref: main
      - name: teste
        run: echo ${{ needs.CreateCertificate.create_certificate.outputs.id }}
      # - name: Create Certicate
      #   if: needs.CreateCertificate.create_certificate.outputs.id == 'true'
      #   id: create_certificate
      #   uses: ./.actions/CheckDNS
      #   with:
      #     apikey-zerossl: '${{ secrets.APIKEY_ZEROSSL }}'
      #     ssl-dns: '${{ secrets.DNS }}'    
      #     ssl-csr: '${{ secrets.CSR }}'   
      #     ssl-validaty-days: '90'
      #     ssl-strict-domains: '1'






